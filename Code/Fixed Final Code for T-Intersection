// T-Intersection Traffic Light System with Pedestrian Button

// Pin Definitions
const int redD1D2Pin = 2;      // Red light for D1 and D2
const int yellowD1D2Pin = 3;   // Yellow light for D1 and D2
const int greenD1D2Pin = 4;    // Green light for D1 and D2

const int redD1D2MirrorPin = 11;    // Mirrored Red light for D1 and D2
const int yellowD1D2MirrorPin = 12; // Mirrored Yellow light for D1 and D2
const int greenD1D2MirrorPin = 13;  // Mirrored Green light for D1 and D2

const int redD3Pin = 5;        // Red light for D3
const int yellowD3Pin = 6;     // Yellow light for D3
const int greenD3Pin = 7;      // Green light for D3

const int redPedPin = 8;       // Red light for pedestrians
const int greenPedPin = 9;     // Green light for pedestrians

const int buttonPin = 10;      // Pedestrian button

// Timing Constants (in milliseconds)
const unsigned long redDuration = 2000;      // 2 seconds for red
const unsigned long yellowDuration = 5000;  // 5 seconds for yellow
const unsigned long greenDuration = 10000;  // 10 seconds for green
const unsigned long pedestrianDuration = 5000; // 5 seconds for pedestrians

// State Variables
bool pedestrianRequested = false;

void setup() {
  // Initialize pins as outputs
  pinMode(redD1D2Pin, OUTPUT);
  pinMode(yellowD1D2Pin, OUTPUT);
  pinMode(greenD1D2Pin, OUTPUT);

  pinMode(redD1D2MirrorPin, OUTPUT);
  pinMode(yellowD1D2MirrorPin, OUTPUT);
  pinMode(greenD1D2MirrorPin, OUTPUT);

  pinMode(redD3Pin, OUTPUT);
  pinMode(yellowD3Pin, OUTPUT);
  pinMode(greenD3Pin, OUTPUT);

  pinMode(redPedPin, OUTPUT);
  pinMode(greenPedPin, OUTPUT);

  // Initialize button pin as input with pullup resistor
  pinMode(buttonPin, INPUT_PULLUP);

  // Start with D1/D2 green, D3 red, and pedestrian red
  digitalWrite(greenD1D2Pin, HIGH);
  digitalWrite(greenD1D2MirrorPin, HIGH);

  digitalWrite(redD3Pin, HIGH);
  digitalWrite(redPedPin, HIGH);

  // Attach an interrupt to detect button press
  attachInterrupt(digitalPinToInterrupt(buttonPin), requestPedestrianCrossing, FALLING);
}

void loop() {
  if (pedestrianRequested) {
    // Handle pedestrian crossing
    pedestrianRequested = false;
    handlePedestrianCrossing();
  } else {
    // Regular traffic light cycle
    trafficLightCycle();
  }
}

void trafficLightCycle() {
  // Phase 1: D1/D2 green, D3 red
  digitalWrite(greenD1D2Pin, HIGH);
  digitalWrite(greenD1D2MirrorPin, HIGH);

  digitalWrite(redD3Pin, HIGH);
  delay(greenDuration);

  // Phase 2: D1/D2 yellow, D3 red
  digitalWrite(greenD1D2Pin, LOW);
  digitalWrite(greenD1D2MirrorPin, LOW);

  digitalWrite(yellowD1D2Pin, HIGH);
  digitalWrite(yellowD1D2MirrorPin, HIGH);
  delay(yellowDuration);

  digitalWrite(yellowD1D2Pin, LOW);
  digitalWrite(yellowD1D2MirrorPin, LOW);
  digitalWrite(redD1D2Pin, HIGH);
  digitalWrite(redD1D2MirrorPin, HIGH);

  // Phase 3: D3 green, D1/D2 red
  digitalWrite(redD3Pin, LOW);
  digitalWrite(greenD3Pin, HIGH);
  delay(greenDuration);

  // Phase 4: D3 yellow, D1/D2 red
  digitalWrite(greenD3Pin, LOW);
  digitalWrite(yellowD3Pin, HIGH);
  delay(yellowDuration);

  digitalWrite(yellowD3Pin, LOW);
  digitalWrite(redD3Pin, HIGH);
  digitalWrite(redD1D2Pin, LOW);
  digitalWrite(redD1D2MirrorPin, LOW);
}

void handlePedestrianCrossing() {
  // Phase 1: Turn D1/D2 red
  digitalWrite(greenD1D2Pin, LOW);
  digitalWrite(greenD1D2MirrorPin, LOW);

  digitalWrite(yellowD1D2Pin, HIGH);
  digitalWrite(yellowD1D2MirrorPin, HIGH);
  delay(yellowDuration);

  digitalWrite(yellowD1D2Pin, LOW);
  digitalWrite(yellowD1D2MirrorPin, LOW);
  digitalWrite(redD1D2Pin, HIGH);
  digitalWrite(redD1D2MirrorPin, HIGH);

  // Phase 2: Turn pedestrian green
  digitalWrite(redPedPin, LOW);
  digitalWrite(greenPedPin, HIGH);
  delay(pedestrianDuration);

  // Reset pedestrian lights
  digitalWrite(greenPedPin, LOW);
  digitalWrite(redPedPin, HIGH);

  // Phase 3: Resume normal cycle
  digitalWrite(redD1D2Pin, LOW);
  digitalWrite(redD1D2MirrorPin, LOW);

  digitalWrite(greenD1D2Pin, HIGH);
  digitalWrite(greenD1D2MirrorPin, HIGH);
}

void requestPedestrianCrossing() {
  // Set the flag to handle pedestrian crossing in the main loop
  pedestrianRequested = true;
}
